env:
  DIRECTORY: dist

name: Release
on:
  workflow_dispatch: null

jobs:
  submit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: pnpm run build
      - name: Submit
        run: cd $DIRECTORY && pnpm run publish
        env:
          WEB_EXT_API_KEY: ${{ secrets.WEB_EXT_API_KEY }}
          WEB_EXT_API_SECRET: ${{ secrets.WEB_EXT_API_SECRET }}
      - name: Generate UUID
        id: generate-uuid
        uses: filipstefansson/uuid-action@v1
      - name: Get current timestamp
        id: get-timestamp
        run: echo "timestamp=$(date +%s)" >> $GITHUB_OUTPUT
      - name: Generate JWT Payload
        id: generate-jwt-payload
        run: |
          echo "payload=\"{\
              \\\"iss\":\\\"${{ secrets.WEB_EXT_API_KEY }}\\\",\
              \\\"jti\\\": ${{ steps.generate-uuid.outputs.uuid }},\
              \\\"iat\\\": \\\"${{ steps.get-timestamp.outputs.timestamp }}\\\",\
              \\\"exp\\\": $(expr ${{ steps.get-timestamp.outputs.timestamp }} + 60)\
          }\"" >> $GITHUB_OUTPUT
      - name: Generate JWT
        id: generate-jwt-token
        uses: morzzz007/github-actions-jwt-generator@1.0.1
        with:
          secret: ${{ secrets.WEB_EXT_API_SECRET }}
          payload: ${{ steps.generate-jwt-payload.outputs.payload }}
      # https://github.com/fregante/web-ext-submit/issues/2#issuecomment-1094305479
      - name: Archive source
        run: git archive -o source.zip HEAD
      - name: Upload source
        run: |
          curl -XPOST https://addons.mozilla.org/api/v5/addons/addon/banger/versions/ \
            -H "Authorization: JWT ${{steps.generate-jwt-token.outputs.token}}" \
            -F "source=@source.zip"
